26 - Standard Input(STDIN), Output(STDOUT), Error(STDERR)
	< (redirects STDIN)
		$read VAR < <file.txt>
		$echo $VAR
	> (redirects STDOUT)
	2> (redirects STDERR)
		$ls asd 2> <file>

27 - Pipes, Data Redirection, and Xargs
	grep, egrep, fgrep, rgrep - print lines matching a pattern
		$grep <what> <from>

	xargs - build and execute command lines from standard input
		$ls | xargs rm
		$ls | xargs -n 1 echo "Hello"
		$ls | xargs -n 1 chgrp cdrom
			every item change group to cdrom

	tee - read  from  standard input and write to standard output and files
		$echo "This is cool" | tee file.txt
			echoes "This is cool" and puts it in file.txt

28 - Foreground and Background Jobs
	$jobs
	$fg - foreground
	$bg - background
	
	$sleep 9000 & - puts in a background '&'
	ctrl + z - suspends a job
	bg %<jobnumber> - bg%3

	'+' - most recent job
	'-' - second most recent job

	nohup - run a command immune to hangups, with output to a non-tty
		hides a job but still active in the process
			$nohup sleep 9000 &

	screen - screen manager with VT100/ANSI terminal emulation
		makes a session in terminal that can be close
		press ctrl + A to be able to type
		press D to disconnect to screen session
			$screen -dr
				Reattach a session and if necessary detach it first

29 - Signals and PIDs
	kill - send a signal to a process
		SIGHUP		1	Hangup
		SIGINT		2	Interrupt
		SIGKILL		9	Kill
		SIGTERM		15	Terminate
		
		$kill <signal #> <process id>

30 - Advanced Process Management
	killall - kill processes by name
		$killall <signal #> <process name>

	pgrep,  pkill - look up or signal processes based on name and other attributes
		$pkill sle
			kills all sleep processes
		$pgrep -af sle
			shows process id and full lists


		
	





